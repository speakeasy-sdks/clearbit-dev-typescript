/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

export class PersonEmployment extends SpeakeasyBase {
  /**
   * The domain of the company the person works for.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "domain" })
  domain?: string;

  /**
   * The name of the company the person works for.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The person's standardized role at the company they work for based on their title.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "role" })
  role?: string;

  /**
   * The person's standardized seniority at the company they work for based on their title.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "seniority" })
  seniority?: string;

  /**
   * The person's standardized sub role at the company they work for based on their title.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subRole" })
  subRole?: string;

  /**
   * The person's title at the company they work for.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;
}

export class PersonFacebook extends SpeakeasyBase {
  /**
   * The person's Facebook profile username (e.g. amaccaw).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "handle" })
  handle?: string;
}

export class PersonGeo extends SpeakeasyBase {
  /**
   * The city the person lives in based on their location.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "city" })
  city?: string;

  /**
   * The country the person lives in based on their location.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country?: string;

  /**
   * The country code of the country the person lives in based on their location.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "countryCode" })
  countryCode?: string;

  /**
   * The latitude based on the person's location.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lat" })
  lat?: number;

  /**
   * The longitude based on the person's location.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lng" })
  lng?: number;

  /**
   * The state the person lives in based on their location.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: string;

  /**
   * The state code of the state the person lives in based on their location.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stateCode" })
  stateCode?: string;
}

export class PersonGithub extends SpeakeasyBase {
  /**
   * The profile picture of the person's GitHub profile.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "avatar" })
  avatar?: string;

  /**
   * The person's website as listed on their GitHub profile.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "blog" })
  blog?: string;

  /**
   * The company the person works for as listed on their GitHub profile.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "company" })
  company?: string;

  /**
   * The number of followers the person has on GitHub.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "followers" })
  followers?: number;

  /**
   * The number of people the person follows on GitHub.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "following" })
  following?: number;

  /**
   * The person's GitHub profile username (e.g. maccman).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "handle" })
  handle?: string;

  /**
   * The ID of the person's GitHub profile.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;
}

export class PersonGoogleplus extends SpeakeasyBase {
  /**
   * The person's Google Plus username. This field has been deprecated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "handle" })
  handle?: string;
}

export class PersonGravatarAvatars extends SpeakeasyBase {
  /**
   * The type of picture listed by the person on their Gravatar profile.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  /**
   * The URL of a picture listed by the person on their Gravatar profile.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}

export class PersonGravatarUrls extends SpeakeasyBase {
  /**
   * The title of the website listed by the person on their Gravatar profile.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  /**
   * The website URL listed by the person on their Gravatar profile.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}

export class PersonGravatar extends SpeakeasyBase {
  /**
   * The profile picture of the person's Gravatar profile.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "avatar" })
  avatar?: string;

  @SpeakeasyMetadata({ elemType: PersonGravatarAvatars })
  @Expose({ name: "avatars" })
  @Type(() => PersonGravatarAvatars)
  avatars?: PersonGravatarAvatars[];

  /**
   * The person's Gravatar profile username (e.g., maccman).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "handle" })
  handle?: string;

  @SpeakeasyMetadata({ elemType: PersonGravatarUrls })
  @Expose({ name: "urls" })
  @Type(() => PersonGravatarUrls)
  urls?: PersonGravatarUrls[];
}

export class PersonLinkedin extends SpeakeasyBase {
  /**
   * The last section of the person's LinkedIn profile URL (e.g. in/alex-maccaw-ab592978).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "handle" })
  handle?: string;
}

export class PersonName extends SpeakeasyBase {
  /**
   * The person's last name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "familyName" })
  familyName?: string;

  /**
   * The person's full name. This may exist even if the givenName or familyName aren't available.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fullName" })
  fullName?: string;

  /**
   * The person's first name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "givenName" })
  givenName?: string;
}

export class PersonTwitter extends SpeakeasyBase {
  /**
   * The profile picture of the person's Twitter profile.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "avatar" })
  avatar?: string;

  /**
   * The person's bio as listed on their Twitter profile.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bio" })
  bio?: string;

  /**
   * The number of tweets the person has liked on Twitter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "favorites" })
  favorites?: number;

  /**
   * The number of followers the person has on Twitter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "followers" })
  followers?: number;

  /**
   * The number of people the person follows on Twitter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "following" })
  following?: number;

  /**
   * The person's Twitter profile username (e.g. maccaw).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "handle" })
  handle?: string;

  /**
   * The ID of the person's Twitter profile.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * The person's location as listed on their Twitter profile.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  location?: string;

  /**
   * The person's website as listed on their Twitter profile.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "site" })
  site?: string;

  /**
   * The number of tweets the person has shared on Twitter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "statuses" })
  statuses?: number;
}

/**
 * Successful lookup, person encoded in the response body
 */
export class Person extends SpeakeasyBase {
  /**
   * Timestamp indicating when Clearbit detected the person's email became active.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "activeAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  activeAt?: Date;

  /**
   * The person's profile picture surfaced through their own social media accounts.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "avatar" })
  avatar?: string;

  /**
   * The person's bio surfaced through their own social media accounts.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bio" })
  bio?: string;

  /**
   * The person's email.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * Indicates whether the person's email domain is associated with a free email provider (e.g., Gmail). Useful for distinguishing between personal emails and work emails.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "emailProvider" })
  emailProvider?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "employment" })
  @Type(() => PersonEmployment)
  employment?: PersonEmployment;

  @SpeakeasyMetadata()
  @Expose({ name: "facebook" })
  @Type(() => PersonFacebook)
  facebook?: PersonFacebook;

  /**
   * Indicates whether the person's search was fuzzy or an exact match.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fuzzy" })
  fuzzy?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "geo" })
  @Type(() => PersonGeo)
  geo?: PersonGeo;

  @SpeakeasyMetadata()
  @Expose({ name: "github" })
  @Type(() => PersonGithub)
  github?: PersonGithub;

  @SpeakeasyMetadata()
  @Expose({ name: "googleplus" })
  @Type(() => PersonGoogleplus)
  googleplus?: PersonGoogleplus;

  @SpeakeasyMetadata()
  @Expose({ name: "gravatar" })
  @Type(() => PersonGravatar)
  gravatar?: PersonGravatar;

  /**
   * Clearbit's internal identifier for the person.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Timestamp indicating when Clearbit detected the person's email became inactive.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inactiveAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  inactiveAt?: Date;

  /**
   * Timestamp indicating when the person's record was last updated in Clearbit's database. A record update may or may not include new information about the person.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "indexedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  indexedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "linkedin" })
  @Type(() => PersonLinkedin)
  linkedin?: PersonLinkedin;

  /**
   * The city, state, and country where the person lives.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  location?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  @Type(() => PersonName)
  name?: PersonName;

  /**
   * The person's phone number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "phone" })
  phone?: string;

  /**
   * The person's website surfaced through their own social media accounts.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "site" })
  site?: string;

  /**
   * The person's time zone based on their location.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeZone" })
  timeZone?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "twitter" })
  @Type(() => PersonTwitter)
  twitter?: PersonTwitter;

  /**
   * The difference in hours from the person's time zone to UTC (-12 to 14).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "utcOffset" })
  utcOffset?: number;
}
